# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qNaZFrPWWXScr12qwGSB9phFT6uGxfj0
"""

!pip install pyTelegramBotAPI
import telebot  
import string 
import random  #a library to generate random name of the room
import psycopg2 #a library to connect to the db
token = '901933637:AAGH7XP4UNdKCXyQ_PQSqTSiuk_y_HFAiXY'
db_name = 'd6drtr5rc6fncf' #name of data base
db_user = 'lnqovymyzbtknf' #name of the user of db
password = '9352722138284d1c4d8320a3d545508d280df29fe7c1a9686aeb2d5748323a98' 
host = 'ec2-174-129-255-7.compute-1.amazonaws.com'  
port = '5432' 

bot = telebot.TeleBot(token)


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    print(message.chat.id)
    bot.reply_to(message, """Ho Ho Ho, welcome to the Super Secret Santa bot!\U0001F385 \U0001F381
    
\U0001F511 If you want to play a Secret Santa with your friends send me the following command /create_room and get the access key to the room.

\U0001F9D4 \U0001F469 If you want to add your name to the existing room just write the key of the room and your name through the colon. You can also add the gifts you've always wanted!
Example: jwucjshl:Andrei Ternikov (wishlist: tickets to Mariinsky theater).

\U0001F3C1 Only the creator of the room can start the distribution of the names.
To do so, send me the command /start and the key of the room through the colon. 
Example: /start:jwucjshl""")


def connect_to_db():
    conn = psycopg2.connect(host=host, dbname=db_name, user=db_user, password=password, port=port)
    cur = conn.cursor() #connect, cursor to make a request in db
    return conn, cur


@bot.message_handler(func=lambda message: 'create_room' in message.text)
def create_room(message):
    conn, cur = connect_to_db()
    uuid = ''.join([random.choice(string.ascii_letters + string.digits) for _ in range(8)]) #randomize the key from letters and numbers
    try:
        cur.execute("insert into main_room (name, admin_chat_id) values(%s, %s);", (uuid, message.chat.id))
        conn.commit()
        bot.reply_to(message, f"""\U0001F64C A free room with the key {uuid} is successfully created! \U0001F64C
        
Now we are waiting for the players of the game. Everybody should add themselves. Wishlist can also be included!
Example:jwucjshl:Andrei Ternikov (wishlist: tickets to Mariinsky theater)""")
    except: #if the same key exists
        bot.reply_to(message, '\U0001F6A8 Something went wrong.. Try to send the command again.')


@bot.message_handler(func=lambda message: 'start' in message.text)
def start_room(message):
    conn, cur = connect_to_db()
    room = ':'.join(message.text.split(':')[1:])  #execute the key after colon
    try:
        cur.execute("select id from main_room where name = %s and admin_chat_id = %s", (room, str(message.chat.id)))
        room_id = cur.fetchone()[0]
        cur.execute("select chat_id, name from main_user where room_id = %s", (room_id,))
        users = cur.fetchall()
        print(users)
        users_count = len(users)
        targets = list(range(users_count)) #id of players
        if users_count % 2 == 0:
            targets = list(reversed(targets))   #if the number of names is an equal number, reverses the list of names so everybody gets other names
        elif users_count > 1:
            targets = list(reversed(targets))   #if the number of names is an unequal number, reverses the list of names and replace the middle name with first so everybody gets other names
            targets[users_count // 2], targets[0] = targets[0], targets[users_count // 2]   
        else:
            pass #when the number of players is one
        for target_number, user in enumerate(users):
            bot.send_message(chat_id=user[0], text=f"""\U0001F973 Secret Santa in the room {room} is started! \U0001F973
                
You are a Secret Santa of {users[targets[target_number]][1]} \U0001F381""")

        bot.reply_to(message, f"""You have started the Secret Santa in your room \U0001F385!""")
    except:
        bot.reply_to(message, f"""\U0001F6A8 This room doesn't exist or you are not the creator of the room""")


@bot.message_handler(func=lambda message: ':' in message.text)
def add_user(message):
    conn, cur = connect_to_db()
    room = message.text.split(':')[0]  #get the room number before the colon
    name = ':'.join(message.text.split(':')[1:])
    try:
        cur.execute("select id from main_room where name = %s", (room,))
        room_id = cur.fetchone()[0] #get the id of the room from the request
        cur.execute("insert into main_user (chat_id, name, room_id) values(%s, %s, %s);",
                    (message.chat.id, name, room_id))
        conn.commit() #to save the changes in the room
        bot.reply_to(message, f"""\U0001F9D4 \U0001F469 The player {name} is successfully added to the room {room}!

\U0001F550 Let's wait, when the creator starts the game and distributes the names. 
If it is you press the command /start and the key of the room. 
Example: start:jwucjshl""")
    except:
        bot.reply_to(message,
                     """\U0001F6A8 Something went wrong. This room doesn't exist or the player is already in the room.""")


if __name__ == '__main__':
    bot.polling(none_stop=True)

